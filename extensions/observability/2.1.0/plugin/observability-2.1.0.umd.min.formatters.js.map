{"version":3,"file":"observability-2.1.0.umd.min.formatters.js","mappings":"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","sources":["webpack://observability-2.1.0/./modules/urn.ts","webpack://observability-2.1.0/./components/Health/HealthState.vue","webpack://observability-2.1.0/./components/Health/HealthState.vue?e2ab","webpack://observability-2.1.0/./formatters/ComponentLinkedHealthState.vue","webpack://observability-2.1.0/./formatters/ComponentLinkedHealthState.vue?e420","webpack://observability-2.1.0/./components/Health/HealthState.vue?105a","webpack://observability-2.1.0/./components/Health/HealthState.vue?5303"],"sourcesContent":["import {\n  mapKind, STS_CLUSTER,\n  STS_NAMESPACE,\n  STS_NODE\n} from './suseObservability';\n\nexport function buildUrn(component: any, clusterName: string | undefined): string | undefined {\n  if (!component.type) {\n    return undefined;\n  }\n\n  const kind = mapKind(component.type.toLowerCase());\n\n  if (!clusterName) {\n    throw new Error(`Cluster name is required for ${ kind } URN`);\n  }\n\n  const namespace = component.metadata?.namespace;\n  const name = component.metadata?.name || component.name;\n\n  switch (kind) {\n  case STS_CLUSTER:\n    return `urn:cluster:/${ clusterName }`;\n  case STS_NODE:\n    return `urn:kubernetes:/${ clusterName }:node/${ name }`;\n  case STS_NAMESPACE:\n    return `urn:kubernetes:/${ clusterName }:namespace/${ name }`;\n  default:\n    return `urn:kubernetes:/${ clusterName }:${ namespace }:${ kind }/${ name }`;\n  }\n}\n","<script>\nimport { HEALTH_STATE_TYPES } from '../../types/types';\n\nexport default {\n  name:  'HealthState',\n  props: {\n    health: { type: String, default: null },\n    color:  { type: String, default: null },\n  },\n\n  computed: {\n    badgeColor() {\n      if (this.color) {\n        return this.color;\n      }\n\n      switch (this.health) {\n      case HEALTH_STATE_TYPES.CLEAR:\n        return 'green';\n      case HEALTH_STATE_TYPES.DEVIATING:\n        return 'orange';\n      case HEALTH_STATE_TYPES.CRITICAL:\n        return 'red';\n      case HEALTH_STATE_TYPES.UNKNOWN:\n      case HEALTH_STATE_TYPES.NOT_MONITORED:\n        return 'grey';\n      default:\n        return 'skeleton';\n      }\n    },\n  },\n};\n</script>\n<template>\n  <span :class=\"`healthstate healthstate-${badgeColor}`\">\n    {{ health ?? \"LOADING\" }}\n  </span>\n</template>\n\n<style lang=\"scss\" scoped>\n.healthstate-green {\n  color: rgb(43, 158, 64);\n}\n\n.healthstate-orange {\n  color: rgb(255, 138, 30);\n}\n\n.healthstate-red {\n  color: rgb(235, 87, 87);\n}\n\n.healthstate-grey {\n  color: rgb(135, 142, 152);\n}\n\n.healthstate-skeleton {\n  cursor: wait;\n  color: rgb(217, 217, 217);\n  background-color: rgb(217, 217, 217);\n}\n\n.healthstate {\n  display: inline-block;\n  border-width: 1px;\n  border-style: solid;\n  border-radius: 20px;\n  padding: 2px 10px;\n  height: 21px;\n  line-height: 16px;\n  text-transform: uppercase;\n  font-size: 0.75rem;\n  letter-spacing: 0.3px;\n  font-weight: 500;\n}\n</style>\n","import { render } from \"./HealthState.vue?vue&type=template&id=2ec76faa&scoped=true\"\nimport script from \"./HealthState.vue?vue&type=script&lang=js\"\nexport * from \"./HealthState.vue?vue&type=script&lang=js\"\n\nimport \"./HealthState.vue?vue&type=style&index=0&id=2ec76faa&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2ec76faa\"]])\n\nexport default __exports__","<script>\nimport { mapGetters } from 'vuex';\nimport HealthState from '../components/Health/HealthState';\nimport { loadSuseObservabilitySettings, loadComponent, isCrdLoaded } from '../modules/suseObservability';\nimport { buildUrn } from '../modules/urn';\nimport { HEALTH_STATE_TYPES } from '../types/types';\n\nexport default {\n  name:       'ComponentLinkedHealthState',\n  components: { HealthState },\n  props:      {\n    value: {\n      type:    String,\n      default: '',\n    },\n    row: {\n      type:     Object,\n      required: true,\n    },\n  },\n\n  computed: {\n    ...mapGetters(['currentCluster']),\n\n    componentIdentifier() {\n      const cluster = this.currentCluster?.spec.displayName;\n\n      return buildUrn(this.row, cluster);\n    },\n\n    color() {\n      switch (this.value) {\n      case 'active':\n        return 'green';\n      case 'inactive':\n        return 'grey';\n      default:\n        return '';\n      }\n    },\n  },\n  data() {\n    return {\n      HEALTH_STATE_TYPES,\n      isLoading: true,\n      error:     null,\n      data:      null\n    };\n  },\n\n  async fetch() {\n    if (!isCrdLoaded(this.$store)) {\n      return;\n    }\n\n    const componentIdentifier = this.componentIdentifier;\n\n    if (!componentIdentifier) {\n      this.isLoading = false;\n\n      return;\n    }\n\n    try {\n      const settings = await loadSuseObservabilitySettings(this.$store);\n\n      const component = await loadComponent(\n        this.$store,\n        settings,\n        componentIdentifier\n      );\n\n      this.data = {\n        health: component.state.healthState,\n        href:   `https://${ settings.spec.url }/#/components/${ encodeURIComponent(\n          componentIdentifier\n        ) }`\n      };\n    } catch (error) {\n      this.error = error;\n    } finally {\n      this.isLoading = false;\n    }\n  },\n};\n</script>\n\n<template>\n  <HealthState v-if=\"isLoading\" :color=\"color\" />\n\n  <a\n    v-else-if=\"data\"\n    :href=\"data.href\"\n    target=\"_blank\"\n    rel=\"nofollow noopener noreferrer\"\n  >\n    <HealthState :health=\"data.health\" :color=\"color\" />\n  </a>\n\n  <HealthState v-else :health=\"HEALTH_STATE_TYPES.UNKNOWN\" :color=\"color\" />\n</template>\n","import { render } from \"./ComponentLinkedHealthState.vue?vue&type=template&id=af2a0b42\"\nimport script from \"./ComponentLinkedHealthState.vue?vue&type=script&lang=js\"\nexport * from \"./ComponentLinkedHealthState.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".healthstate-green[data-v-2ec76faa]{color:#2b9e40}.healthstate-orange[data-v-2ec76faa]{color:#ff8a1e}.healthstate-red[data-v-2ec76faa]{color:#eb5757}.healthstate-grey[data-v-2ec76faa]{color:#878e98}.healthstate-skeleton[data-v-2ec76faa]{cursor:wait;color:#d9d9d9;background-color:#d9d9d9}.healthstate[data-v-2ec76faa]{display:inline-block;border-width:1px;border-style:solid;border-radius:20px;padding:2px 10px;height:21px;line-height:16px;text-transform:uppercase;font-size:.75rem;letter-spacing:.3px;font-weight:500}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./HealthState.vue?vue&type=style&index=0&id=2ec76faa&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"ada042fc\", content, true, {\"sourceMap\":false,\"shadowMode\":false});"],"names":["buildUrn","component","clusterName","type","kind","mapKind","toLowerCase","Error","namespace","metadata","name","STS_CLUSTER","STS_NODE","STS_NAMESPACE","_createElementBlock","class","_normalizeClass","$options","badgeColor","$props","health","props","String","default","color","computed","this","HEALTH_STATE_TYPES","CLEAR","DEVIATING","CRITICAL","UNKNOWN","NOT_MONITORED","__exports__","render","$data","isLoading","_createBlock","_component_HealthState","data","href","target","rel","_createVNode","components","HealthState","value","row","Object","required","mapGetters","componentIdentifier","cluster","currentCluster","spec","displayName","error","fetch","isCrdLoaded","$store","settings","loadSuseObservabilitySettings","loadComponent","state","healthState","url","encodeURIComponent","___CSS_LOADER_EXPORT___","push","module","id","content","__esModule","locals","exports","add"],"sourceRoot":""}