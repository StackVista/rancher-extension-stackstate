{"version":3,"file":"observability-2.2.7.umd.min.formatters.js","mappings":"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","sources":["webpack://observability-2.2.7/./modules/urn.ts","webpack://observability-2.2.7/./components/Health/HealthState.vue","webpack://observability-2.2.7/./components/Health/HealthState.vue?e2ab","webpack://observability-2.2.7/./formatters/ComponentLinkedHealthState.vue","webpack://observability-2.2.7/./formatters/ComponentLinkedHealthState.vue?e420","webpack://observability-2.2.7/./components/Health/HealthState.vue?dbed","webpack://observability-2.2.7/./components/Health/HealthState.vue?debb","webpack://observability-2.2.7/./.shell/assets/brand/ sync ^\\.\\/.*\\/metadata\\.json$"],"sourcesContent":["import {\n  CONFIG_MAP,\n  NAMESPACE,\n  NODE,\n  POD,\n  SECRET,\n  SERVICE,\n  WORKLOAD_TYPES,\n} from \"@shell/config/types\";\nimport { CLUSTER } from \"@shell/store/prefs\";\n\nexport const STS_POD = \"pod\";\nexport const STS_SERVICE = \"service\";\nexport const STS_NODE = \"node\";\nexport const STS_DAEMON_SET = \"daemonset\";\nexport const STS_DEPLOYMENT = \"deployment\";\nexport const STS_STATEFUL_SET = \"statefulset\";\nexport const STS_CRON_JOB = \"cronjob\";\nexport const STS_JOB = \"job\";\nexport const STS_REPLICA_SET = \"replicaset\";\nexport const STS_REPLICATION_CONTROLLER = \"replication-controller\";\nexport const STS_CLUSTER = \"cluster\";\nexport const STS_CONFIG_MAP = \"configmap\";\nexport const STS_SECRET = \"secret\";\nexport const STS_NAMESPACE = \"namespace\";\n\n// Map of kinds to their display names\nconst KINDS = new Map<string, string>([\n  [POD, STS_POD],\n  [SERVICE, STS_SERVICE],\n  [NODE, STS_NODE],\n  [WORKLOAD_TYPES.DAEMON_SET, STS_DAEMON_SET],\n  [WORKLOAD_TYPES.DEPLOYMENT, STS_DEPLOYMENT],\n  [WORKLOAD_TYPES.STATEFUL_SET, STS_STATEFUL_SET],\n  [WORKLOAD_TYPES.CRON_JOB, STS_CRON_JOB],\n  [WORKLOAD_TYPES.JOB, STS_JOB],\n  [WORKLOAD_TYPES.REPLICA_SET, STS_REPLICA_SET],\n  [WORKLOAD_TYPES.REPLICATION_CONTROLLER, STS_REPLICATION_CONTROLLER],\n  [CLUSTER, STS_CLUSTER],\n  [CONFIG_MAP, STS_CONFIG_MAP],\n  [SECRET, STS_SECRET],\n  [NAMESPACE, STS_NAMESPACE],\n]);\n\nexport function mapKind(kind: string): string {\n  return KINDS.get(kind) || kind;\n}\n\nexport function buildUrn(\n  component: any,\n  clusterName: string | undefined,\n): string | undefined {\n  if (!component.type) {\n    return undefined;\n  }\n\n  const kind = mapKind(component.type.toLowerCase());\n\n  if (!clusterName) {\n    throw new Error(`Cluster name is required for ${kind} URN`);\n  }\n\n  const namespace = component.metadata?.namespace;\n  const name = component.metadata?.name || component.name;\n\n  switch (kind) {\n    case STS_CLUSTER:\n      return `urn:cluster:/${clusterName}`;\n    case STS_NODE:\n      return `urn:kubernetes:/${clusterName}:node/${name}`;\n    case STS_NAMESPACE:\n      return `urn:kubernetes:/${clusterName}:namespace/${name}`;\n    default:\n      return `urn:kubernetes:/${clusterName}:${namespace}:${kind}/${name}`;\n  }\n}\n","<script>\nimport { HEALTH_STATE_TYPES } from \"../../types/types\";\n\nexport default {\n  name: \"HealthState\",\n  props: {\n    health: { type: String, default: null },\n    color: { type: String, default: null },\n  },\n\n  computed: {\n    badgeColor() {\n      if (this.color) {\n        return this.color;\n      }\n\n      switch (this.health) {\n        case HEALTH_STATE_TYPES.CLEAR:\n          return \"green\";\n        case HEALTH_STATE_TYPES.DEVIATING:\n          return \"orange\";\n        case HEALTH_STATE_TYPES.CRITICAL:\n          return \"red\";\n        case HEALTH_STATE_TYPES.UNKNOWN:\n        case HEALTH_STATE_TYPES.NOT_MONITORED:\n          return \"grey\";\n        default:\n          return \"skeleton\";\n      }\n    },\n  },\n};\n</script>\n<template>\n  <span :class=\"`healthstate healthstate-${badgeColor}`\">\n    {{ health ?? \"LOADING\" }}\n  </span>\n</template>\n\n<style lang=\"scss\" scoped>\n.healthstate-green {\n  color: rgb(43, 158, 64);\n}\n\n.healthstate-orange {\n  color: rgb(255, 138, 30);\n}\n\n.healthstate-red {\n  color: rgb(235, 87, 87);\n}\n\n.healthstate-grey {\n  color: rgb(135, 142, 152);\n}\n\n.healthstate-skeleton {\n  cursor: wait;\n  color: rgb(217, 217, 217);\n  background-color: transparent;\n}\n\n.healthstate {\n  display: inline-block;\n  border-width: 1px;\n  border-style: solid;\n  border-radius: 20px;\n  padding: 2px 10px;\n  height: 21px;\n  line-height: 16px;\n  text-transform: uppercase;\n  font-size: 0.75rem;\n  letter-spacing: 0.3px;\n  font-weight: 500;\n}\n</style>\n","import { render } from \"./HealthState.vue?vue&type=template&id=28755de2&scoped=true\"\nimport script from \"./HealthState.vue?vue&type=script&lang=js\"\nexport * from \"./HealthState.vue?vue&type=script&lang=js\"\n\nimport \"./HealthState.vue?vue&type=style&index=0&id=28755de2&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-28755de2\"]])\n\nexport default __exports__","<script>\nimport { mapGetters } from \"vuex\";\nimport HealthState from \"../components/Health/HealthState\";\nimport { loadComponent } from \"../modules/suseObservability\";\nimport { loadSuseObservabilitySettings, isCrdLoaded } from \"../modules/rancher\";\nimport { buildUrn } from \"../modules/urn\";\nimport { HEALTH_STATE_TYPES } from \"../types/types\";\n\nexport default {\n  name: \"ComponentLinkedHealthState\",\n  components: { HealthState },\n  props: {\n    value: {\n      type: String,\n      default: \"\",\n    },\n    row: {\n      type: Object,\n      required: true,\n    },\n  },\n\n  computed: {\n    ...mapGetters([\"currentCluster\"]),\n\n    componentIdentifier() {\n      const cluster = this.currentCluster?.spec.displayName;\n\n      return buildUrn(this.row, cluster);\n    },\n\n    color() {\n      switch (this.value) {\n        case \"active\":\n          return \"green\";\n        case \"inactive\":\n          return \"grey\";\n        default:\n          return \"\";\n      }\n    },\n  },\n  data() {\n    return {\n      HEALTH_STATE_TYPES,\n      isLoading: true,\n      error: null,\n      data: null,\n    };\n  },\n\n  async fetch() {\n    if (!isCrdLoaded(this.$store)) {\n      return;\n    }\n\n    const componentIdentifier = this.componentIdentifier;\n\n    if (!componentIdentifier) {\n      this.isLoading = false;\n\n      return;\n    }\n\n    try {\n      const settings = await loadSuseObservabilitySettings(this.$store);\n\n      const component = await loadComponent(\n        this.$store,\n        settings,\n        componentIdentifier,\n      );\n\n      this.data = {\n        health: component.state.healthState,\n        href: `${settings.url}/#/components/${encodeURIComponent(\n          componentIdentifier,\n        )}`,\n      };\n    } catch (error) {\n      this.error = error;\n    } finally {\n      this.isLoading = false;\n    }\n  },\n};\n</script>\n\n<template>\n  <HealthState v-if=\"isLoading\" :color=\"color\" />\n\n  <a\n    v-else-if=\"data\"\n    :href=\"data.href\"\n    target=\"_blank\"\n    rel=\"nofollow noopener noreferrer\"\n  >\n    <HealthState :health=\"data.health\" :color=\"color\" />\n  </a>\n\n  <HealthState v-else :health=\"HEALTH_STATE_TYPES.UNKNOWN\" :color=\"color\" />\n</template>\n","import { render } from \"./ComponentLinkedHealthState.vue?vue&type=template&id=5742f19b\"\nimport script from \"./ComponentLinkedHealthState.vue?vue&type=script&lang=js\"\nexport * from \"./ComponentLinkedHealthState.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".healthstate-green[data-v-28755de2]{color:#2b9e40}.healthstate-orange[data-v-28755de2]{color:#ff8a1e}.healthstate-red[data-v-28755de2]{color:#eb5757}.healthstate-grey[data-v-28755de2]{color:#878e98}.healthstate-skeleton[data-v-28755de2]{cursor:wait;color:#d9d9d9;background-color:transparent}.healthstate[data-v-28755de2]{display:inline-block;border-width:1px;border-style:solid;border-radius:20px;padding:2px 10px;height:21px;line-height:16px;text-transform:uppercase;font-size:.75rem;letter-spacing:.3px;font-weight:500}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./HealthState.vue?vue&type=style&index=0&id=28755de2&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7d2d57aa\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","var map = {\n\t\"./csp/metadata.json\": 6471,\n\t\"./federal/metadata.json\": 1862,\n\t\"./rgs/metadata.json\": 8401,\n\t\"./suse/metadata.json\": 7259\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1177;"],"names":["STS_POD","STS_SERVICE","STS_NODE","STS_DAEMON_SET","STS_DEPLOYMENT","STS_STATEFUL_SET","STS_CRON_JOB","STS_JOB","STS_REPLICA_SET","STS_REPLICATION_CONTROLLER","STS_CLUSTER","STS_CONFIG_MAP","STS_SECRET","STS_NAMESPACE","KINDS","Map","POD","SERVICE","NODE","WORKLOAD_TYPES","DAEMON_SET","DEPLOYMENT","STATEFUL_SET","CRON_JOB","JOB","REPLICA_SET","REPLICATION_CONTROLLER","CLUSTER","CONFIG_MAP","SECRET","NAMESPACE","mapKind","kind","get","buildUrn","component","clusterName","type","toLowerCase","Error","namespace","metadata","name","_createElementBlock","class","_normalizeClass","$options","badgeColor","$props","health","props","String","default","color","computed","this","HEALTH_STATE_TYPES","CLEAR","DEVIATING","CRITICAL","UNKNOWN","NOT_MONITORED","__exports__","render","$data","isLoading","_createBlock","_component_HealthState","data","href","target","rel","_createVNode","components","HealthState","value","row","Object","required","mapGetters","componentIdentifier","cluster","currentCluster","spec","displayName","error","fetch","isCrdLoaded","$store","settings","loadSuseObservabilitySettings","loadComponent","state","healthState","url","encodeURIComponent","___CSS_LOADER_EXPORT___","push","module","id","content","__esModule","locals","exports","add","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","code","keys","resolve"],"sourceRoot":""}